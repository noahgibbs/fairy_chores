#!/usr/bin/env ruby

require "fairy_chores"
require "readline"

# https://ruby-doc.org/stdlib-2.5.1/libdoc/readline/rdoc/Readline.html

PROMPT = "> "

game_type = nil
loop do
  puts "Game type? Choices: nothing_happens assigners_win"
  input = Readline.readline(PROMPT, false)
  unless FairyChores.get_game_type(input.to_sym)
    print "Don't recognise #{input.inspect} as a game type... Try again.\n"
    next
  end
  game_type = input.to_sym
  break
end

how_many = 0
loop do
  puts "Number of fairies? (Default: 6)"
  input = Readline.readline(PROMPT, false)
  how_many = (input == "") ? 6 : input.to_i
  break if how_many > 0 && how_many < 40
  puts "Nope. That number (#{how_many.inspect} / #{input.inspect}) doesn't work for me."
end

circle = FairyChores.make_circle how_many_fairies: how_many, game_type: game_type

loop do
  print "=====\nRound #{circle.round_num.inspect}:\n"
  if circle.finished?
    break
  end

  print "  #{circle.how_many} little fairies, playing in a circle...\n"


end

fairies = circle.fairies
stats = {
  fairies: {
    num: fairies.size,
    doing_chores: fairies.select(&:doing_chores).size,
    can_assign_chores: fairies.select(&:can_assign_chores).size,
  },
  winner: circle.winner,
}
print <<SUMMARY
This game is finished and all #{stats[:fairies][:num].inspect} fairies go back to their play or chores.

#{stats[:fairies][:doing_chores]} fairies are now hard at work on chores.
#{stats[:fairies][:can_assign_chores]} fairies could tell other fairies to get to work.

The winner was: #{stats[:winner]}.
SUMMARY
